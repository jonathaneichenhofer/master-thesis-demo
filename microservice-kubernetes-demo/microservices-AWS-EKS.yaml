apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
        name: microservices-kubernete
        app: microservices-kubernete
    spec:
      containers:
      - image: 162892665763.dkr.ecr.eu-central-1.amazonaws.com/jonathaneichenhofer:apache
        name: apache
        ports:
        - containerPort: 80
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: catalog
  name: catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      run: catalog
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: catalog
    spec:
      containers:
      - image: 162892665763.dkr.ecr.eu-central-1.amazonaws.com/jonathaneichenhofer:catalog
        name: catalog
        env:
        - name: OTEL_SERVICE_NAME
          value: catalog
        - name: OTEL_LOGS_EXPORTER
          value: none
        - name: OTEL_METRICS_EXPORTER
          value: none
        - name: OTEL_TRACES_EXPORTER
          value: jaeger
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: http://simplest-collector:4317
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: customer
  name: customer
spec:
  replicas: 1
  selector:
    matchLabels:
      run: customer
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: customer
    spec:
      containers:
      - image: 162892665763.dkr.ecr.eu-central-1.amazonaws.com/jonathaneichenhofer:customer
        name: customer
        env:
        - name: OTEL_SERVICE_NAME
          value: customer
        - name: OTEL_LOGS_EXPORTER
          value: none
        - name: OTEL_METRICS_EXPORTER
          value: none
        - name: OTEL_TRACES_EXPORTER
          value: jaeger
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: http://simplest-collector:4317
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: order
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      run: order
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: order
    spec:
      containers:
      - image: 162892665763.dkr.ecr.eu-central-1.amazonaws.com/jonathaneichenhofer:order
        name: order
        env:
        - name: OTEL_SERVICE_NAME
          value: order
        - name: OTEL_LOGS_EXPORTER
          value: none
        - name: OTEL_METRICS_EXPORTER
          value: none
        - name: OTEL_TRACES_EXPORTER
          value: jaeger
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: http://simplest-collector:4317
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: catalog
  name: catalog
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: catalog
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: customer
  name: customer
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: customer
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: order
  name: order
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: order
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  name: microservices-kubernete-np
  labels:
    name: testing-kube-deploy
    app: microservices-kubernete
spec:
  type: NodePort
  selector:
    app: microservices-kubernete
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30072